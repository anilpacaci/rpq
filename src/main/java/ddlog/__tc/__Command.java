// automatically generated by the FlatBuffers compiler, do not modify

package ddlog.__tc;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class __Command extends Table {
  public static __Command getRootAs__Command(ByteBuffer _bb) { return getRootAs__Command(_bb, new __Command()); }
  public static __Command getRootAs__Command(ByteBuffer _bb, __Command obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public __Command __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int kind() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public long relid() { int o = __offset(6); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public byte valType() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public Table val(Table obj) { int o = __offset(10); return o != 0 ? __union(obj, o) : null; }

  public static int create__Command(FlatBufferBuilder builder,
      int kind,
      long relid,
      byte val_type,
      int valOffset) {
    builder.startObject(4);
    __Command.addRelid(builder, relid);
    __Command.addVal(builder, valOffset);
    __Command.addValType(builder, val_type);
    __Command.addKind(builder, kind);
    return __Command.end__Command(builder);
  }

  public static void start__Command(FlatBufferBuilder builder) { builder.startObject(4); }
  public static void addKind(FlatBufferBuilder builder, int kind) { builder.addByte(0, (byte)kind, (byte)0); }
  public static void addRelid(FlatBufferBuilder builder, long relid) { builder.addLong(1, relid, 0L); }
  public static void addValType(FlatBufferBuilder builder, byte valType) { builder.addByte(2, valType, 0); }
  public static void addVal(FlatBufferBuilder builder, int valOffset) { builder.addOffset(3, valOffset, 0); }
  public static int end__Command(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

