// automatically generated by the FlatBuffers compiler, do not modify

package ddlog.__tc;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class __ValueTable extends Table {
  public static __ValueTable getRootAs__ValueTable(ByteBuffer _bb) { return getRootAs__ValueTable(_bb, new __ValueTable()); }
  public static __ValueTable getRootAs__ValueTable(ByteBuffer _bb, __ValueTable obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public __ValueTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte vType() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public Table v(Table obj) { int o = __offset(6); return o != 0 ? __union(obj, o) : null; }

  public static int create__ValueTable(FlatBufferBuilder builder,
      byte v_type,
      int vOffset) {
    builder.startObject(2);
    __ValueTable.addV(builder, vOffset);
    __ValueTable.addVType(builder, v_type);
    return __ValueTable.end__ValueTable(builder);
  }

  public static void start__ValueTable(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addVType(FlatBufferBuilder builder, byte vType) { builder.addByte(0, vType, 0); }
  public static void addV(FlatBufferBuilder builder, int vOffset) { builder.addOffset(1, vOffset, 0); }
  public static int end__ValueTable(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

