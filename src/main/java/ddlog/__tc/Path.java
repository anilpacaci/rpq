// automatically generated by the FlatBuffers compiler, do not modify

package ddlog.__tc;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Path extends Table {
  public static Path getRootAsPath(ByteBuffer _bb) { return getRootAsPath(_bb, new Path()); }
  public static Path getRootAsPath(ByteBuffer _bb, Path obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public Path __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long s1() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long s2() { int o = __offset(6); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }

  public static int createPath(FlatBufferBuilder builder,
      long s1,
      long s2) {
    builder.startObject(2);
    Path.addS2(builder, s2);
    Path.addS1(builder, s1);
    return Path.endPath(builder);
  }

  public static void startPath(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addS1(FlatBufferBuilder builder, long s1) { builder.addLong(0, s1, 0L); }
  public static void addS2(FlatBufferBuilder builder, long s2) { builder.addLong(1, s2, 0L); }
  public static int endPath(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

