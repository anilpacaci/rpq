// Automatically generated by the DDlog compiler.
package ddlog.tc;
import ddlogapi.DDlogAPI;
import ddlogapi.DDlogException;
import com.google.flatbuffers.*;
public class tcUpdateBuilder extends tcFlatBufferBuilder
{
    private java.util.Vector<Integer> commands;
    private boolean finished;
    public tcUpdateBuilder() {
        this.commands = new java.util.Vector<Integer>();
        this.finished = false;
    }
    public void applyUpdates(DDlogAPI hddlog)
        throws DDlogException {
        if (this.finished) {
            throw new IllegalStateException("applyUpdates() can only be invoked once for a tcUpdateBuilder instance.");
        }
        int[] cmds = new int[this.commands.size()];
        for(int i = 0; i < cmds.length; i++)
            cmds[i] = this.commands.get(i);
        int cmdvec = ddlog.__tc.__Commands.create__Commands(fbbuilder, ddlog.__tc.__Commands.createCommandsVector(fbbuilder,cmds));
        fbbuilder.finish(cmdvec);
        this.finished = true;
        hddlog.applyUpdatesFromFlatBuf(fbbuilder.dataBuffer());
    }
    public void insert_Edge(long s, long t)
    {
        int cmd = ddlog.__tc.__Command.create__Command(fbbuilder, ddlog.__tc.__CommandKind.Insert, 0, ddlog.__tc.__Value.Edge, ddlog.__tc.Edge.createEdge(fbbuilder, s, t));
        this.commands.add(Integer.valueOf(cmd));
    }
    public void delete_Edge(long s, long t)
    {
        int cmd = ddlog.__tc.__Command.create__Command(fbbuilder, ddlog.__tc.__CommandKind.Delete, 0, ddlog.__tc.__Value.Edge, ddlog.__tc.Edge.createEdge(fbbuilder, s, t));
        this.commands.add(Integer.valueOf(cmd));
    }
}