// Automatically generated by the DDlog compiler.
package ddlog.tc;
import com.google.flatbuffers.*;
import ddlogapi.DDlogCommand;
public final class CommandReader implements DDlogCommand<Object>
{
    protected CommandReader (ddlog.__tc.__Command inner) { this.inner = inner; }
    private ddlog.__tc.__Command inner;
    public final Kind kind(){
        if (inner.kind() == ddlog.__tc.__CommandKind.Insert) {
            return DDlogCommand.Kind.Insert;
        } if (inner.kind() == ddlog.__tc.__CommandKind.Delete) {
            return DDlogCommand.Kind.DeleteVal;
        } else {
            throw new IllegalArgumentException("Unsupported command kind" + inner.kind());
        }
    }
    public final int relid() { return (int)this.inner.relid(); }
    public final Object value() {
        switch (this.relid()) {
            case 0: {
                ddlog.__tc.Edge val = (ddlog.__tc.Edge)this.inner.val(new ddlog.__tc.Edge());
                return (Object) new EdgeReader(val);
            }
            case 1: {
                ddlog.__tc.Path val = (ddlog.__tc.Path)this.inner.val(new ddlog.__tc.Path());
                return (Object) new PathReader(val);
            }
            default: throw new IllegalArgumentException("Invalid relation id" + this.relid());
        }
    }
}